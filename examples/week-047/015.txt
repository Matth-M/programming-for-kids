
#include <stdio.h>
struct board {
    char a0;
    char a1;
    char a2;
    char a3;
    char b0;
    char b1;
    char b2;
    char b3;
    char c0;
    char c1;
    char c2;
    char c3;
    char d0;
    char d1;
    char d2;
    char d3;
};

struct user_input {
    char row;
    char col;
};

void board_print(struct board game) {
    printf("  a b c d\n");
    printf("0 %c %c %c %c\n", game.a0, game.b0, game.c0, game.d0);
    printf("1 %c %c %c %c\n", game.a1, game.b1, game.c1, game.d1);
    printf("2 %c %c %c %c\n", game.a2, game.b2, game.c2, game.d2);
    printf("3 %c %c %c %c\n", game.a3, game.b3, game.c3, game.d3);
    printf("\n");
}

int board_set(struct board *game, char symbol, struct user_input ui) {
    int valid_move = 1;
    if (ui.col == 'a' && ui.row == '0') {
        game->a0 = symbol;
    } else if (ui.col == 'a' && ui.row == '1') {
        game->a1 = symbol;
    } else if (ui.col == 'a' && ui.row == '2') {
        game->a2 = symbol;
    } else if (ui.col == 'a' && ui.row == '3') {
        game->a3 = symbol;
    } else if (ui.col == 'b' && ui.row == '0') {
        game->b0 = symbol;
    } else if (ui.col == 'b' && ui.row == '1') {
        game->b1 = symbol;
    } else if (ui.col == 'b' && ui.row == '2') {
        game->b2 = symbol;
    } else if (ui.col == 'b' && ui.row == '3') {
        game->b3 = symbol;
    } else if (ui.col == 'c' && ui.row == '0') {
        game->c0 = symbol;
    } else if (ui.col == 'c' && ui.row == '1') {
        game->c1 = symbol;
    } else if (ui.col == 'c' && ui.row == '2') {
        game->c2 = symbol;
    } else if (ui.col == 'c' && ui.row == '3') {
        game->c3 = symbol;
    } else if (ui.col == 'd' && ui.row == '0') {
        game->d0 = symbol;
    } else if (ui.col == 'd' && ui.row == '1') {
        game->d1 = symbol;
    } else if (ui.col == 'd' && ui.row == '2') {
        game->d2 = symbol;
    } else if (ui.col == 'd' && ui.row == '3') {
        game->d3 = symbol;
    }else {
        valid_move = 0;
    }
    return valid_move;
}

struct user_input get_user_input(char symbol) {
    struct user_input ui = {0};
    printf("%c> ", symbol);
    ui.col = getchar();
    ui.row = getchar();
    getchar(); // ignore the new line
    return ui;
}

void toggle_symbol(char *symbol) {
    // if the symbol is X, set it to 0, if its 0, set it to X
    if (*symbol == 'X') {
        *symbol = '0';
    } else {
        *symbol = 'X';
    }
}
int check_win(struct board game, char symbol){
    // Check rows
    if ((game.a0 == symbol && game.a1 == symbol && game.a2 == symbol && game.a3 == symbol) ||
        (game.b0 == symbol && game.b1 == symbol && game.b2 == symbol && game.b3 == symbol) ||
        (game.d0 == symbol && game.d1 == symbol && game.d2 == symbol && game.d3 == symbol) ||
        (game.c0 == symbol && game.c1 == symbol && game.c2 == symbol && game.c3 == symbol)) {
        return 1; // Winning condition met
    }

    // Check columns
    if ((game.a0 == symbol && game.b0 == symbol && game.c0 == symbol && game.d0 == symbol) ||
        (game.a1 == symbol && game.b1 == symbol && game.c1 == symbol && game.d1 == symbol) ||
        (game.a3 == symbol && game.b3 == symbol && game.c3 == symbol && game.d3 == symbol) ||
        (game.a2 == symbol && game.b2 == symbol && game.c2 == symbol && game.d2 == symbol)) {
        return 1; // Winning condition met
    }

    // Check diagonals
    if ((game.a0 == symbol && game.b1 == symbol && game.c2 == symbol && game.d3 == symbol) ||
        (game.a3 == symbol && game.b2 == symbol && game.c1 == symbol && game.d0 == symbol)) {
        return 1; // Winning condition met
    }

    return 0; // Winning condition not met
}

int main(void){
    char current_symbol = 'X';
    struct board game_board = {
        .a0 = '-',
        .a1 = '-',
        .a2 = '-',
        .a3 = '-',
        .b0 = '-',
        .b1 = '-',
        .b2 = '-',
        .b3 = '-',
        .c0 = '-',
        .c1 = '-',
        .c2 = '-',
        .c3 = '-',
        .d0 = '-',
        .d1 = '-',
        .d2 = '-',
        .d3 = '-'
    }; 

    while(1) {
        board_print(game_board);
        struct user_input input = get_user_input(current_symbol);
        if (board_set(&game_board, current_symbol, input)) {
            // only change the symbol if the move is valid
            toggle_symbol(&current_symbol);
        }
        if(check_win(game_board,current_symbol)){
            printf("YOU WIN\n");
            break;
        }
    }
}
